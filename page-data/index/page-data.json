{"componentChunkName":"component---src-pages-index-js","path":"/","webpackCompilationHash":"0540e66ac6690f56b9dd","result":{"data":{"site":{"siteMetadata":{"title":"云音乐大前端专栏"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"本文作者：李磊 背景 Web 应用如果要更新列表数据，一般会选择点击左上角刷新按钮，或使用快捷键 Ctrl+F…","fields":{"slug":"/react-native-refresh/"},"frontmatter":{"date":"2020-07-21","title":"React Native 实现自定义下拉刷新组件","description":"Web 应用如果要更新列表数据，一般会选择点击左上角刷新按钮，或使用快捷键 Ctrl+F5，进行页面资源和数据的全量更新。如果页面提供了刷新按钮或是翻页按钮，也可以点击只做数据更新。但移动客户端屏幕寸土寸金，无论是加上一个刷新按钮，还是配合越来越少的手机按键来做刷新操作，都不是十分便捷的方案。"}}},{"node":{"excerpt":"图片来源：https://rustwasm.github.io/ 本文作者：刘家隆 写在前边 本文希望通过 Rust 敲一敲 WebAssembly 的大门。作为一篇入门文章，期望能够帮你了解 WebAssembly 以及构建一个简单的 WebAssembly 应用。在不考虑IE…","fields":{"slug":"/wasm-rust/"},"frontmatter":{"date":"2020-07-01","title":"实现一个简单的基于 WebAssembly 的图片处理应用","description":"本文希望通过 Rust 敲一敲 WebAssembly 的大门。作为一篇入门文章，期望能够帮你了解 WebAssembly 以及构建一个简单的 WebAssembly 应用。在不考虑IE的情况，目前大部分主流的浏览器已经支持 WebAssembly，尤其在移动端，主流的UC、X5内核、Safari等都已支持。读完本文，希望能够帮助你将 WebAssembly 应用在生产环境中。"}}},{"node":{"excerpt":"封面 作者：imyzf 我们在开发 iOS App 内的前端页面时，有一个很大的痛点，页面无法使用 Safari Inspector 等工具调试。遇到了问题，我们只能想办法加 vConsole，或者注入 Weinre…","fields":{"slug":"/ios-web-debug/"},"frontmatter":{"date":"2020-06-24","title":"构建基于 iOS 模拟器的前端调试方案","description":"本文将为大家介绍自动化控制 iOS 模拟器的原理，为开发基于 iOS 模拟器的前端调试方案提供帮助。"}}},{"node":{"excerpt":"…","fields":{"slug":"/im/"},"frontmatter":{"date":"2020-06-08","title":"互动直播中的前端技术 -- 即时通讯","description":"在疫情期间，上班族开启了远程办公，体验了各种远程办公软件。老师做起了主播，学生们感受到了被钉钉支配的恐惧，歌手们开启了在线演唱会，许多综艺节目也变成了在线直播。在这全民互动直播的时期，我们来聊聊互动直播中的即时通讯技术在前端中的使用。"}}},{"node":{"excerpt":"写在前面 在过去的几个月里，React Hooks 在我们的项目中得到了充分利用。在实际使用过程中，我发现 React Hooks 除了带来简洁的代码外，也存在对其使用不当的情况。 在这篇文章中，我想总结我过去几个月来对 React Hooks…","fields":{"slug":"/react-hooks/"},"frontmatter":{"date":"2020-05-22","title":"React Hooks 最佳实践","description":"在过去的几个月里，React Hooks 在我们的项目中得到了充分利用。在实际使用过程中，我发现 React Hooks 除了带来简洁的代码外，也存在对其使用不当的情况。这篇文章中，我想总结我过去几个月来对 React Hooks 使用，分享我对它的看法以及我认为的最佳实践，供大家参考。"}}},{"node":{"excerpt":"header.png 图片来源：https://medium.com/encored-technologies-engineering-data-science 本文作者：夏银竹 引子 2019 年初的时候，我们业务组上线了一个新的 Node.js 应用，主要提供C端的 API…","fields":{"slug":"/node-log-rotate/"},"frontmatter":{"date":"2020-05-09","title":"Node.js 应用日志切割原理与踩坑实践","description":"2019 年初的时候，我们业务组上线了一个新的 Node.js 应用，主要提供C端的 API 服务。 随着应用流量的逐渐增加，线上监控平台会偶发性报警，提示磁盘 disk_io 平均等待时间超出 1000ms，随后观察发现磁盘 IO 每秒写字节量突然飙高，但很快又下降。"}}},{"node":{"excerpt":"banner 本文作者：徐超颖 CLI 工具作为开发者们亲密无间的好伙伴，996 风雨无阻地陪伴着我们进行日常的开发工作。身为前端开发，你一定也亲自开发过一套属于你自己的 CLI 小工具！如果没有，本文也不会教~ 在接下来的五分钟里，我们来聊聊 Node CLI…","fields":{"slug":"/node-cli/"},"frontmatter":{"date":"2020-04-28","title":"Node CLI 工具的插件方案探索","description":"CLI 工具作为开发者们亲密无间的好伙伴，996 风雨无阻地陪伴着我们进行日常的开发工作。身为前端开发，你一定也亲自开发过一套属于你自己的 CLI 小工具！"}}},{"node":{"excerpt":"本文作者：鲍观霞 背景 随着 React 生态的快速发展，社区基于 React…","fields":{"slug":"/react-admin/"},"frontmatter":{"date":"2020-04-17","title":"从零搭建中后台框架的核心流程","description":"随着 React 生态的快速发展，社区基于 React 的状态管理方案层出不穷，这意味着很多方案开发者依然要做很多选择，没有约定的团队，沟通成本和跨团队协作成本，以及长期的维护是非常高的，这时候统一一套开发模式就显得尤为重要。 "}}},{"node":{"excerpt":"图片来源：https://ultimatewebsitedesign.co.uk 本文作者：hsy 背景 对于视频的在线播放，按视频内容的实时性可以分为点播（VOD）和直播（Live Streaming）。现如今在 Web 环境下需要进行视频播放时，通常可以使用 video…","fields":{"slug":"/web-video/"},"frontmatter":{"date":"2020-04-07","title":"Web 视频播放的那些事儿","description":"对于视频的在线播放，按视频内容的实时性可以分为点播（VOD）和直播（Live Streaming）。现如今在 Web 环境下需要进行视频播放时，通常可以使用 video 标签，通过它将视频播放的各个环节都托管给浏览器。"}}},{"node":{"excerpt":"header.png 图片来源：https://kalianey.com/ 本文作者：郑正和（https://github.com/proempire） 本文以音频能力中的全局播放为切入点，探讨单例模式在前端业务中的应用。文中代码均为 React…","fields":{"slug":"/singleton-pattern/"},"frontmatter":{"date":"2020-03-24","title":"从全局播放到单例模式","description":"本文以音频能力中的全局播放为切入点，探讨单例模式在前端业务中的应用。文中代码均为 React 组件内代码。"}}},{"node":{"excerpt":"本文作者 陈舒仪   图片来源 Pixabay，作者 Arek Socha  背景 Three.js（下面简称 Three） 作为一个 3D 库，不仅减少了我们学习 OpenGL 和 WebGL…","fields":{"slug":"/threejs/"},"frontmatter":{"date":"2020-03-17","title":"Three.js 动效方案","description":"Three.js（下面简称 Three） 作为一个 3D 库，不仅减少了我们学习 OpenGL 和 WebGL 的成本，还大大提升了前端在可视化上给用户带来更多的真实、沉浸式的体验。众所周知，Three 更多的是用 3D 模型 + 投影相机 + 用户交互的方式来构建一个「3D 世界」。"}}},{"node":{"excerpt":"本文作者 Bermudarat 头图来自 Level up your React architecture with MVVM, 作者 Danijel Vincijanovic 1. 前言 在开始正文前，先介绍几个概念（已经了解的朋友可以跳过）： Server Side…","fields":{"slug":"/ssr-routing/"},"frontmatter":{"date":"2020-02-28","title":"支持动态路由的 React Server Side Rendering 实现","description":"服务端渲染有很多坑会踩，针对路由本文提出一种解决方案，在服务端不使用中心化的路由配置，结合 Code Splitting ，通过一次预渲染，获取当前 URL 对应的模块名和数据获取方法。"}}},{"node":{"excerpt":"前言 近几年，前端社区中 DSL 这个词开始频繁出镜，这和环境的变化有很大关系： React、Vue、Angular 等现代框架的表现层设计往往和 DSL 有较强的关联，透过这些优秀作品我们可以得到一些实践指引。 前端相关语言的转编译工具链趋于成熟，如 babel，postcss…","fields":{"slug":"/dsl/"},"frontmatter":{"date":"2020-02-20","title":"前端 DSL 实践指南（上）—— 内部 DSL","description":"本文作者由于工作经历上的特殊性，积累了一些关于前端 DSL 的实践经验（主要是外部 DSL），在所维护的开源项目中也有一些体现，同时作者在社区也有过一些不成体系的回答如《如何写一个类似 LESS 的编译工具》。这次我会尝试从前端开发的视角来完整探讨下 DSL 这个「难以细说」的议题。"}}},{"node":{"excerpt":"此项目为云音乐营收组稳定性工程的前端部分，本文作者 章伟东，项目其他参与者赵祥涛 一个 bug…","fields":{"slug":"/catch-react-error/"},"frontmatter":{"date":"2020-01-14","title":"捕获 React 异常","description":"韩国某著名男子天团之前在我们平台上架了一张重磅数字专辑，本来是一件喜大普奔的好事，结果上架后投诉蜂拥而至。部分用户反馈页面打开就崩溃，紧急排查后发现真凶就是下面这段代码。"}}},{"node":{"excerpt":"banner 前言 市面上，音频编辑软件非常多，比如 cubase、sonar 等等。虽然它们功能强大，但是在 Web 上的应用却显得心有余而力不足。因为 Web 应用的大多数资源都是存放在网络服务器中的，用 cubase…","fields":{"slug":"/web-audio/"},"frontmatter":{"date":"2020-01-09","title":"用 Web 实现一个简易的音频编辑器","description":"市面上，音频编辑软件非常多，比如 cubase、sonar 等等。虽然它们功能强大，但是在 Web 上的应用却显得心有余而力不足。因为 Web 应用的大多数资源都是存放在网络服务器中的，用 cubase 这些软件，首先要把音频文件下载下来，修改完之后再上传到服务器，最后还要作更新操作，操作效率极其低下。如果能让音频直接在 Web 端进行编辑并更新到服务器，则可以大大提高运营人员的工作效率。下面就为大家介绍一下如何运用 Web 技术实现高性能的音频编辑器。"}}},{"node":{"excerpt":"banner 本文作者：赵祥涛 函数式编程（Functional Programming）这一理念不论是在前端领域还是后端领域，都逐渐热门起来，现在不大量使用函数式编程技术的大型应用程序已经很罕见了，比如前端流行的 React（核心思路数据即视图），Vue3.…","fields":{"slug":"/javascript-functional-programming-advance/"},"frontmatter":{"date":"2019-12-30","title":"函数式编程进阶：杰克船长的黑珍珠号","description":"本系列文章适合拥有扎实的 JavaScript 基础和有一定函数式编程经验的人阅读，本文的目的是结合 JavaScript 的语言特性来讲解范畴论的一些概念和逻辑在编程中的实际应用。"}}},{"node":{"excerpt":"在线体验地址：hksite.cn/prjs/christmashat 源码地址：https://github.com/hk029/christmas-hat…","fields":{"slug":"/xmas-hat/"},"frontmatter":{"date":"2019-12-25","title":"「圣诞特辑」纯前端实现人脸识别自动佩戴圣诞帽","description":"叮叮当，叮叮当，吊儿个郎当，一年一度的圣诞节到咯，我不由的回想起了前两年票圈被圣诞帽支配的恐惧。对于懒人的我来说，自己调整一个圣诞帽子佩戴还是太麻烦了。于是我就想了，有没有什么办法能让我的头像自动佩戴上圣诞帽呢？还真给我想到了，这就是今天的主题，用纯前端的方式给你做一个自动佩戴圣诞帽的网站。"}}},{"node":{"excerpt":"Title image of Streams API by Mozilla Contributors is licensed under CC-BY-SA 2.5.\n Streams API 示意图(https://developer.mozilla.org/en-US/docs…","fields":{"slug":"/streams-api/"},"frontmatter":{"date":"2019-12-23","title":"从 Fetch 到 Streams —— 以流的角度处理网络请求","description":"流在开发中是一个很常见的概念。有了流，在处理大文件时就不再需要等待整个数据获取完毕后才处理数据，而是可以一段一段地拿到数据，在获得数据的同时直接解析数据。这样既可以高效利用 CPU 等资源，还减少了存放整个数据的内存占用。不过在过去，客户端 JavaScript 上都没有流的概念，而随着 Streams API 在各大浏览器上的逐步实现，我们终于可以使用原生的 API 以流的角度来看待数据了，例如从 fetch 请求上可以得到一个网络流。"}}},{"node":{"excerpt":"本文作者：网易云音乐前端工程师 包勇明 前言 不管 Node.js 在实际产品中的使用情况如何，相信现在使用 Node.js 作为服务端来开发的项目是数以百万计的，其中绝大多数的开发人员都是前端工程师，因为 Node.js…","fields":{"slug":"/api-design/"},"frontmatter":{"date":"2019-12-17","title":"开发高质量服务端 API","description":"如果使用了 Node.js 作为服务端开发语言，我们肯定要开发 API 接口。本文用一个示例需求，来讲述一下如何高效开发高质量的服务端 API 接口。"}}},{"node":{"excerpt":"banner 本文作者：ggvswild…","fields":{"slug":"/canvas-snapshot/"},"frontmatter":{"date":"2019-12-13","title":"高质量前端快照方案：来自页面的「自拍」","description":"将网页保存为图片（以下简称为快照），是用户记录和分享页面信息的有效手段，在各种兴趣测试和营销推广等形式的活动页面中尤为常见。"}}},{"node":{"excerpt":"本文作者： Cody Chan 本文仅用于简单普及，达到的目的是给没接触过或者很少接触过这方面的人一点感觉，阅读起来会比较轻松，作者深知短篇幅文章是不可能真正教会什么的，所以也不会出现 RTFM 的内容。 概念 提到云原生（Cloud Native…","fields":{"slug":"/cloud-native/"},"frontmatter":{"date":"2019-12-09","title":"云原生基础及调研","description":"本文仅用于简单普及，达到的目的是给没接触过或者很少接触过这方面的人一点感觉，阅读起来会比较轻松，作者深知短篇幅文章是不可能真正教会什么的，所以也不会出现 RTFM 的内容。"}}},{"node":{"excerpt":"本文主旨 长列表渲染、无限下拉也算是前端开发老生常谈的问题之一了，本文将介绍一种简洁、巧妙、高效的方式来实现。话不多说，看下图，也许你可以发现什么？ 无限下拉示意图 不知你是否从上面这张图中注意到了什么，比如只是渲染了可视区域的部分 DOM…","fields":{"slug":"/large-list/"},"frontmatter":{"date":"2019-12-03","title":"一个简洁、有趣的无限下拉方案","description":"长列表渲染、无限下拉也算是前端开发老生常谈的问题之一了，本文将介绍一种简洁、巧妙、高效的方式来实现。"}}},{"node":{"excerpt":"看完本文希望读者能够了解到，Docker 的基本原理，Kubernetes 是怎么工作的， 对于前端 Kubernetes 有哪些优势与玩法。 Docker 和传统部署方式最大的不同在于，它将不会限制我们使用任何工具，任何语言，任何版本的 runtime，Docker…","fields":{"slug":"/docker-and-kubernetes/"},"frontmatter":{"date":"2019-11-27","title":"前端领域的 Docker 与 Kubernetes","description":"看完本文希望读者能够了解到，Docker 的基本原理，Kubernetes 是怎么工作的， 对于前端 Kubernetes 有哪些优势与玩法。"}}},{"node":{"excerpt":"导言 目前 Web 开发普遍都切换到了前后端分离的开发模式。虽然在工程和职能上已经分离了，但在实际工作中，前后端在开发进度上往往会出现不一致的情况，此时就会极大地影响开发效率。\n接口 mock…","fields":{"slug":"/svrx-mock/"},"frontmatter":{"date":"2019-11-20","title":"使用 svrx 实现更优雅的接口 Mock","description":"目前 Web 开发普遍都切换到了前后端分离的开发模式。虽然在工程和职能上已经分离了，但在实际工作中，前后端在开发进度上往往会出现不一致的情况，此时就会极大地影响开发效率。 接口 mock 在此时就发挥出了巨大价值，它磨平了这个时间差，最终实现高效的前后端分离开发。"}}},{"node":{"excerpt":"image 本篇文章来自网易云音乐前端工程师 kkdev163 的投稿，其个人博客中也记录了一些前端监控领域的实践文章。 前言 云音乐前端性能监控平台，底层使用了 Lighthouse 进行审计评分，在实践过程中我们积累了一些 Lighthouse…","fields":{"slug":"/lighthouse/"},"frontmatter":{"date":"2019-11-12","title":"Lighthouse 测试内幕","description":"云音乐前端性能监控平台，底层使用了 Lighthouse 进行审计评分，在实践过程中我们积累了一些 Lighthouse 内部实现的研究经验，希望通过这篇文章可以分享给各位读者。"}}},{"node":{"excerpt":"1. 内容概要 本文主要讨论以下两个问题： JavaScript 的位运算：先简单回顾下位运算，平时用的少，相信不少人和我一样忘的差不多了 权限设计：根据位运算的特点，设计一个权限系统（添加、删除、判断等） 2. JavaScript 位运算 2.1. Number…","fields":{"slug":"/javascript-bitwise-operators/"},"frontmatter":{"date":"2019-11-07","title":"JavaScript 中的位运算和权限设计","description":"先简单回顾下位运算，平时用的少，相信不少人和我一样忘的差不多了，根据位运算的特点，设计一个权限系统（添加、删除、判断等）"}}},{"node":{"excerpt":"header.png 简介 Zergling 是我们团队自研的埋点管理平台，默认的数据格式如下： 一种自定义 json 格式，比较不同在于： 带注释 字符串通过  分割符，当做数组用 value 为基本类型，没有 object…","fields":{"slug":"/json-parser/"},"frontmatter":{"date":"2019-10-31","title":"从零实现自定义 JSON Parser","description":"Zergling 是我们团队自研的埋点管理平台，默认的数据格式有点特殊，需要一个自定义的 json parser 来规范输入问题，总的分为词法分析和语法分析两部分"}}},{"node":{"excerpt":"…","fields":{"slug":"/svrx/"},"frontmatter":{"date":"2019-10-21","title":"Server-X：一款可能提升你十倍工作效率的工具","description":"本文将介绍一款全新的前端开发工具，希望它能给你的前端开发带来看起来和现在一样但其实又不那么一样的体验。"}}},{"node":{"excerpt":"Web Audio在音频可视化中的应用 本文有两个关键词：和。前者是实践，后者是其背后的技术支持。 Web Audio 是很大的知识点，本文会将重点放在如何获取音频数据这块，对于其 API 的更多内容，可以查看 MDN。 另外，要将音频数据转换成可视化图形，除了了解 Web…","fields":{"slug":"/web-audio-visualization/"},"frontmatter":{"date":"2019-09-26","title":"Web Audio在音频可视化中的应用","description":"本文有两个关键词：`音频可视化`和`Web Audio`。前者是实践，后者是其背后的技术支持。 Web Audio 是很大的知识点，本文会将重点放在**如何获取音频数据**这块。"}}},{"node":{"excerpt":"什么是 Serverless ? 定义 引用一段对于 Serverless 较为官方的定义：“Serverless 是一种执行模型（execution model…","fields":{"slug":"/aws-serverless/"},"frontmatter":{"date":"2019-09-12","title":"快速上手亚马逊的 Serverless 服务","description":"Serverless 是一种执行模型（execution model）。在这种模型中，云服务商负责通过动态地分配资源来执行一段代码。"}}},{"node":{"excerpt":"…","fields":{"slug":"/javascript-functional-programming-quickstart/"},"frontmatter":{"date":"2019-09-06","title":"简明 JavaScript 函数式编程——入门篇","description":"早在 1950 年代，随着 Lisp 语言的创建，函数式编程（ Functional Programming，简称 FP）就已经开始出现在大家视野。"}}},{"node":{"excerpt":"header.png 背景 前不久，我参与开发了团队中的一个 web 应用，其中的一个页面操作如下图所示： demo.gif 这个制作间页面有着类似 PPT…","fields":{"slug":"/web-undo-redo/"},"frontmatter":{"date":"2019-08-22","title":"Web 应用的撤销重做实现","description":"前不久，我参与开发了团队中的一个 web 应用，过程中让用户能够进行操作的**撤销、重做**会提高编辑效率，大大提高用户体验，而本文要讲的正是在这个功能实现中的探索与总结。"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}