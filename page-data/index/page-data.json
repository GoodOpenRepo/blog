{"componentChunkName":"component---src-pages-index-js","path":"/","webpackCompilationHash":"ddb5bcae10847c99a9ab","result":{"data":{"site":{"siteMetadata":{"title":"云音乐前端专栏"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"从 Fetch 到 Streams —— 以流的角度处理网络请求 Title image of Streams API by Mozilla Contributors is licensed under CC-BY-SA 2.5.\n Streams API 示意图(https…","fields":{"slug":"/fetch-and-streams/"},"frontmatter":{"date":"2019-12-23","title":"从 Fetch 到 Streams —— 以流的角度处理网络请求","description":"流在开发中是一个很常见的概念。有了流，在处理大文件时就不再需要等待整个数据获取完毕后才处理数据，而是可以一段一段地拿到数据，在获得数据的同时直接解析数据。这样既可以高效利用 CPU 等资源，还减少了存放整个数据的内存占用。不过在过去，客户端 JavaScript 上都没有流的概念，而随着 Streams API 在各大浏览器上的逐步实现，我们终于可以使用原生的 API 以流的角度来看待数据了，例如从 fetch 请求上可以得到一个网络流。"}}},{"node":{"excerpt":"本文作者：网易云音乐前端工程师 包勇明 前言 不管 Node.js 在实际产品中的使用情况如何，相信现在使用 Node.js 作为服务端来开发的项目是数以百万计的，其中绝大多数的开发人员都是前端工程师，因为 Node.js…","fields":{"slug":"/api-design/"},"frontmatter":{"date":"2019-12-17","title":"开发高质量服务端 API","description":"如果使用了 Node.js 作为服务端开发语言，我们肯定要开发 API 接口。本文用一个示例需求，来讲述一下如何高效开发高质量的服务端 API 接口。"}}},{"node":{"excerpt":"banner 本文作者：ggvswild…","fields":{"slug":"/canvas-snapshot/"},"frontmatter":{"date":"2019-12-13","title":"高质量前端快照方案：来自页面的「自拍」","description":"将网页保存为图片（以下简称为快照），是用户记录和分享页面信息的有效手段，在各种兴趣测试和营销推广等形式的活动页面中尤为常见。"}}},{"node":{"excerpt":"本文作者： Cody Chan 本文仅用于简单普及，达到的目的是给没接触过或者很少接触过这方面的人一点感觉，阅读起来会比较轻松，作者深知短篇幅文章是不可能真正教会什么的，所以也不会出现 RTFM 的内容。 概念 提到云原生（Cloud Native…","fields":{"slug":"/cloud-native/"},"frontmatter":{"date":"2019-12-09","title":"云原生基础及调研","description":"本文仅用于简单普及，达到的目的是给没接触过或者很少接触过这方面的人一点感觉，阅读起来会比较轻松，作者深知短篇幅文章是不可能真正教会什么的，所以也不会出现 RTFM 的内容。"}}},{"node":{"excerpt":"本文主旨 长列表渲染、无限下拉也算是前端开发老生常谈的问题之一了，本文将介绍一种简洁、巧妙、高效的方式来实现。话不多说，看下图，也许你可以发现什么？ 无限下拉示意图 不知你是否从上面这张图中注意到了什么，比如只是渲染了可视区域的部分 DOM…","fields":{"slug":"/large-list/"},"frontmatter":{"date":"2019-12-03","title":"一个简洁、有趣的无限下拉方案","description":"长列表渲染、无限下拉也算是前端开发老生常谈的问题之一了，本文将介绍一种简洁、巧妙、高效的方式来实现。"}}},{"node":{"excerpt":"看完本文希望读者能够了解到，Docker 的基本原理，Kubernetes 是怎么工作的， 对于前端 Kubernetes 有哪些优势与玩法。 Docker 和传统部署方式最大的不同在于，它将不会限制我们使用任何工具，任何语言，任何版本的 runtime，Docker…","fields":{"slug":"/docker-and-kubernetes/"},"frontmatter":{"date":"2019-11-27","title":"前端领域的 Docker 与 Kubernetes","description":"看完本文希望读者能够了解到，Docker 的基本原理，Kubernetes 是怎么工作的， 对于前端 Kubernetes 有哪些优势与玩法。"}}},{"node":{"excerpt":"导言 目前 Web 开发普遍都切换到了前后端分离的开发模式。虽然在工程和职能上已经分离了，但在实际工作中，前后端在开发进度上往往会出现不一致的情况，此时就会极大地影响开发效率。\n接口 mock…","fields":{"slug":"/svrx-mock/"},"frontmatter":{"date":"2019-11-20","title":"使用 svrx 实现更优雅的接口 Mock","description":"目前 Web 开发普遍都切换到了前后端分离的开发模式。虽然在工程和职能上已经分离了，但在实际工作中，前后端在开发进度上往往会出现不一致的情况，此时就会极大地影响开发效率。 接口 mock 在此时就发挥出了巨大价值，它磨平了这个时间差，最终实现高效的前后端分离开发。"}}},{"node":{"excerpt":"image 本篇文章来自网易云音乐前端工程师 kkdev163 的投稿，其个人博客中也记录了一些前端监控领域的实践文章。 前言 云音乐前端性能监控平台，底层使用了 Lighthouse 进行审计评分，在实践过程中我们积累了一些 Lighthouse…","fields":{"slug":"/lighthouse/"},"frontmatter":{"date":"2019-11-12","title":"Lighthouse 测试内幕","description":"云音乐前端性能监控平台，底层使用了 Lighthouse 进行审计评分，在实践过程中我们积累了一些 Lighthouse 内部实现的研究经验，希望通过这篇文章可以分享给各位读者。"}}},{"node":{"excerpt":"1. 内容概要 本文主要讨论以下两个问题： JavaScript 的位运算：先简单回顾下位运算，平时用的少，相信不少人和我一样忘的差不多了 权限设计：根据位运算的特点，设计一个权限系统（添加、删除、判断等） 2. JavaScript 位运算 2.1. Number…","fields":{"slug":"/javascript-bitwise-operators/"},"frontmatter":{"date":"2019-11-07","title":"JavaScript 中的位运算和权限设计","description":"先简单回顾下位运算，平时用的少，相信不少人和我一样忘的差不多了，根据位运算的特点，设计一个权限系统（添加、删除、判断等）"}}},{"node":{"excerpt":"header.png 简介 Zergling 是我们团队自研的埋点管理平台，默认的数据格式如下： 一种自定义 json 格式，比较不同在于： 带注释 字符串通过  分割符，当做数组用 value 为基本类型，没有 object…","fields":{"slug":"/json-parser/"},"frontmatter":{"date":"2019-10-31","title":"从零实现自定义 JSON Parser","description":"Zergling 是我们团队自研的埋点管理平台，默认的数据格式有点特殊，需要一个自定义的 json parser 来规范输入问题，总的分为词法分析和语法分析两部分"}}},{"node":{"excerpt":"…","fields":{"slug":"/svrx/"},"frontmatter":{"date":"2019-10-21","title":"Server-X：一款可能提升你十倍工作效率的工具","description":"本文将介绍一款全新的前端开发工具，希望它能给你的前端开发带来看起来和现在一样但其实又不那么一样的体验。"}}},{"node":{"excerpt":"Web Audio在音频可视化中的应用 本文有两个关键词：和。前者是实践，后者是其背后的技术支持。 Web Audio 是很大的知识点，本文会将重点放在如何获取音频数据这块，对于其 API 的更多内容，可以查看 MDN。 另外，要将音频数据转换成可视化图形，除了了解 Web…","fields":{"slug":"/web-audio-visualization/"},"frontmatter":{"date":"2019-09-26","title":"Web Audio在音频可视化中的应用","description":"本文有两个关键词：`音频可视化`和`Web Audio`。前者是实践，后者是其背后的技术支持。 Web Audio 是很大的知识点，本文会将重点放在**如何获取音频数据**这块。"}}},{"node":{"excerpt":"什么是 Serverless ? 定义 引用一段对于 Serverless 较为官方的定义：“Serverless 是一种执行模型（execution model…","fields":{"slug":"/aws-serverless/"},"frontmatter":{"date":"2019-09-12","title":"快速上手亚马逊的 Serverless 服务","description":"Serverless 是一种执行模型（execution model）。在这种模型中，云服务商负责通过动态地分配资源来执行一段代码。"}}},{"node":{"excerpt":"…","fields":{"slug":"/javascript-functional-programming-quickstart/"},"frontmatter":{"date":"2019-09-06","title":"简明 JavaScript 函数式编程——入门篇","description":"早在 1950 年代，随着 Lisp 语言的创建，函数式编程（ Functional Programming，简称 FP）就已经开始出现在大家视野。"}}},{"node":{"excerpt":"header.png 背景 前不久，我参与开发了团队中的一个 web 应用，其中的一个页面操作如下图所示： demo.gif 这个制作间页面有着类似 PPT…","fields":{"slug":"/web-undo-redo/"},"frontmatter":{"date":"2019-08-22","title":"Web 应用的撤销重做实现","description":"前不久，我参与开发了团队中的一个 web 应用，过程中让用户能够进行操作的**撤销、重做**会提高编辑效率，大大提高用户体验，而本文要讲的正是在这个功能实现中的探索与总结。"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}